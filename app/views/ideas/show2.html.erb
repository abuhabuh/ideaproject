<% content_for :head do %>
  <%= javascript_include_tag "http://js.pusherapp.com/1.9/pusher.min.js" %>
  <script src="/assets/external/jquery.tools.min.js"></script>

  <script type="text/javascript">
   
    // Keep array of user's friends' ids in js memory
    var friend_ids_str = "<%= @friend_ids_str %>";
    var friend_ids_array = friend_ids_str.split(',');
    var public_view = true;
    
    // Functions that are bound to the facebox deals search buttons: search, prev, next
    //   Each function calls the master submitDealsSearchFirst function
    function submitDealsSearchFirst(){
      submitDealsSearch(1);
      return false;
    }
    function submitDealsSearchNext(){
      var max_pages = parseInt($(".deals_search_results_max_page").html());
      var current_page = parseInt($(".deals_search_results_current_page").html());
      
      if (current_page < max_pages){
        submitDealsSearch(current_page + 1);
      }
    }
    function submitDealsSearchPrev(){
      var max_pages = parseInt($(".deals_search_results_max_page").html());
      var current_page = parseInt($(".deals_search_results_current_page").html());
      
      if (current_page > 1){
        submitDealsSearch(current_page - 1);
      }
    }
    
    // Submits AJAX request to server to bring back deal search results. 
    //   search_page specifies page to bring back in page results
    //   "deals_search_form" class is class name of deal search form declared in deals/_deal_search_popup.html.erb
    //   "deal-search-results-section" class is also specified in deals/_deal_search_popup.html.erb
    function submitDealsSearch(search_page){
      $target_form = null;
      $(".deals_search_form").each( function(index){
        // TODO: CHECK THIS IS ALWAYS TRUE - Assuming facebox form is 2nd in list of each function so id should be 1
        if (index == 1){
          $target_form = this; // 'this' refers to form that is found
        }
      });
      
      var params_data = $($target_form).serialize();
      params_data = params_data + "&search_page_num=" + search_page.toString();

      // ajax GET request to server from the facebox form that was cloned and rendered
	    $.ajax({
        url: $($target_form).attr('action'), 
        data: params_data, 
        dataType: 'html',
        success: function(returned_html){
          $(".deal-search-results-section").html(returned_html);
          
          // bind each <add deal> link to ajax call to add deal to idea
          $(".deal-search-result-action").click( function() {
            $.post("<%=idea_deals_path%>", 
                   {idea_id: <%=@idea.id%>, deal_id: $(".deal_id_from_search",this).html()}, // 'this' refers to link that was clicked
                   null,
                   "script"
            );                
          });
          
          // Show previous and next links
          var max_pages = parseInt($(".deals_search_results_max_page").html());
          var current_page = parseInt($(".deals_search_results_current_page").html());

          if ( max_pages > 1 ){
            if (current_page > 1){
              $(".deals_search_previous_link").html("\<a href='#'\>prev\<\/a\>");
            }else{
              $(".deals_search_previous_link").html("prev");
            }
            if (current_page < max_pages){
              $(".deals_search_next_link").html("\<a href='#'\>next\<\/a\>");
            }else{
              $(".deals_search_next_link").html("next");            
            }
            
            $(".deals_search_previous_link").show();
            $(".deals_search_next_link").show();
          }
        }//,
        //error: function(msg){ // TODO: remove this for live deploy
        //  alert(msg);
        //}
      });
    }

    // Deals facebox control bindings
    $(document).bind('reveal.facebox', function() {
      /* BIND submit action on new deal creation form to this function
           - "new_dea" class is auto generated by new deal _form partial
           NOTE: this action is bound to both the original form and the 
           cloned form in facebox */
			$(".new_deal").submit( function(){
        // we are in the context of the form that is displayed by facebox because the button
        //   that was clicked belongs to the form
        // submit AJAX request and set return type to be jQuery which will be executed
        $.post($(this).attr('action'), $(this).serialize(), null, "script");
			  // close facebox window
			  $(document).trigger('close.facebox')

			  return false;
			});
			
			/* BIND submit action on deals search form to ajax get call to deals index action
			 */
			$(".deals_search_form").submit(submitDealsSearchFirst);
			$(".deals_search_previous_link").click(submitDealsSearchPrev);
			$(".deals_search_next_link").click(submitDealsSearchNext);
    });
    // clean up the hidden search form after facebox is closed
    $(document).bind('afterClose.facebox', function() {
    
      $(".deal-search-results-section").html("");
      $(".deals_search_previous_link").hide();
      $(".deals_search_next_link").hide();
    
    });
    // End deals facebox control bindings
    
    
    function toggle_reply() {
      var raw_id = $(this).attr("id");
      var id = "#" + raw_id + "_reply";
      $(id).toggle(0, function() {
        var textarea_id =  "#" + raw_id + "_reply_text_area";
        var element = $(textarea_id);
        element.focus();
      });
      return false;
    }

    function clearForm(form) {
      // iterate over all of the inputs for the form
      // element that was passed in
      $(':input', form).each(function() {
        var type = this.type;
        var tag = this.tagName.toLowerCase(); // normalize case
        // it's ok to reset the value attr of text inputs,
        // password inputs, and textareas
        if (type == 'text' || type == 'password' || tag == 'textarea')
          this.value = "";
          // checkboxes and radios need to have their checked state cleared
          // but should *not* have their 'value' changed
        else if (type == 'checkbox' || type == 'radio')
          this.checked = false;
          // select elements need to have their 'selectedIndex' property set to -1
          // (this works for both single and multiple select elements)
        else if (tag == 'select')
        this.selectedIndex = -1;
      });
   };

    function replyFormAjax(request, returned_html, xhr) {
          var parentId = $(this).parent().attr("id");
          $(this).parent().toggle();
          if(parentId == "new_topic") {
          //means it's a brand new top level topic, must handle it differently than a child reply
            $("#forum-container").prepend(returned_html);
          } else {
            var id = $(this).parent().attr("id").split("_")[0];
            var child_posts_id = "#" + id + "_children";
            $(child_posts_id).prepend(returned_html);
            var view_children_link = "#" + id + "_view_children_link";
            var link_text = $(view_children_link).text();
            var child_count = Number(link_text.match("\\d+")) + 1;
            link_text = "Hide Replies(" + child_count + ")";
            $(view_children_link).html(link_text);
            $(child_posts_id).show();
          }
          clearForm(this);
          $(".reply-link-class").unbind('click');
          $(".reply-link-class").click(toggle_reply);

          $('.new_post').unbind('ajax:success');

          $('.new_post').bind('ajax:success', replyFormAjax);
 
    	};

   
 
    $(document).ready(function(){
      $(".reply-link-class").click(toggle_reply);

      $(".view-children-link").click(function() {
        var id = $(this).attr("id");
        var post_id = id.match("\\d+");
        id = "#" + post_id + "_children";
        $(id).toggle();
        var link_text = $(this).text();
        //Change the link text to View/Hide so the user knows they can toggle the post tree
        if(link_text.search("View") > -1) {
          link_text = link_text.replace("View", "Hide");
        } else if(link_text.search("Hide") > -1) {
          link_text = link_text.replace("Hide", "View");
        }
        $(this).text(link_text);
        return false;
      });

        $("#new_topic_link").click(function() {
          $("#new_topic").toggle();
          return false;
        });
    
      $('.new_post').bind('ajax:success', replyFormAjax);
  
      $('#JQUERY-view-deals-link').bind('click', function() {
        if ($('#JQUERY-deals-section').css('display') == "none"){
          $('#JQUERY-deals-section').show('slow');
          $('#JQUERY-view-deals-link').html("Hide");         
          //$('.chat-board-container').height(100);
        } else {
          $('#JQUERY-deals-section').hide('slow');
          $('#JQUERY-view-deals-link').html("Show");
          //$('.chat-board-container').height(230);
        }
        return false;
      });

      $('#JQUERY-view-chat-link').bind('click', function() {
        <% unless @read_only %>
        if ($('#JQUERY-chat-container').css('display') == "none"){
          $('#JQUERY-chat-container').show('slow');
          $('#JQUERY-view-chat-link').html("Hide Chat");
          //$('.chat-board-container').height(100);
        } else {
          $('#JQUERY-chat-container').hide('slow');
          $('#JQUERY-view-chat-link').html("Chat");
          //$('.chat-board-container').height(230);
        }
        <% end %>
        return false;
      });
      
      // Open facebox on <a> link click
      $.facebox.settings.closeImage = '/assets/closelabel.png'
      $.facebox.settings.loadingImage = '/assets/loading.gif'
      $('a[rel*=facebox]').facebox()
      
		  // <BEGIN> Pusher chat functions
      $("div#<%=ID_TAG_IDEA_CHAT+@idea.id.to_s%>").prop({
        scrollTop: $("div#<%=ID_TAG_IDEA_CHAT+@idea.id.to_s%>").prop("scrollHeight")
      });

			pusher = new Pusher('<%=Pusher.key%>');
			chat_presence_channel = pusher.subscribe('<%=PUSHER_CHANNEL_PREFIX_IDEA + @idea.id.to_s%>');
					 
			chat_presence_channel.bind('<%=PUSHER_CHAT_MSG_EVENT%>',
				function(data) {
					eval(data);
				}
			);
			
			chat_presence_channel.bind('pusher:subscription_succeeded', function(members){
				$('#people_chatting').html("");

        /* REMOVED FOR IDEA PAGE CLEANUP
        if (members.count > 1){
          $('#JQUERY-chat-window-header').html("Live Chat Window - People are online!");
          $('#JQUERY-chat-container').show('slow');
          $('#JQUERY-view-chat-link').html("Hide");
        }
        */

				members.each(function(member){				
  				if ($('#<%=ID_TAG_IDEA_USER%>' + String(member.id)).length ) {
					  member_online(member.id);
					} else {
            if (render_user(member.id)){
              add_user_to_list(member.id);
            }
					}
				});
				
			});

			chat_presence_channel.bind('pusher:member_removed', function(member){
				if ($('#<%=ID_TAG_IDEA_USER%>' + String(member.id)).length ) {
				  member_offline(member.id);
				}
			});

			chat_presence_channel.bind('pusher:member_added', function(member){
				if ($('#<%=ID_TAG_IDEA_USER%>' + String(member.id)).length ) {
				  member_online(member.id);
          
          /* REMOVED FOR IDEA PAGE CLEANUP
          $('#JQUERY-chat-window-header').html("Live Chat Window - " + member.info.name + " online!");
          $('#JQUERY-chat-container').show('slow');
          $('#JQUERY-view-chat-link').html("Hide");
          */
				} else {
          if (render_user(member.id)) {
            add_user_to_list(member.id);
            //" + member.user_info.name + "
            /* REMOVED FOR IDEA PAGE CLEANUP
            $('#JQUERY-chat-window-header').html("Live Chat Window - " + member.info.name + " online!");
            $('#JQUERY-chat-container').show('slow');
            $('#JQUERY-view-chat-link').html("Hide");
            */
				  }
				}
			});
  	  // <END> Pusher chat functions
			
	    // Function for re-rendering user chat list	(want to load this after pusher presence channel is established)
		  function render_user_list(public_view_boolean){
		    $.ajax({
          url: "<%=idea_chat_user_list_path%>", 
          data: {idea_id : <%=@idea.id%>, friends_only : !public_view_boolean, friend_ids_str : friend_ids_str}, 
          dataType: 'html',
          success: function(returned_html){
            $("#<%=ID_TAG_IDEA_CHAT_USER_LIST%>").replaceWith(returned_html);
            public_view = public_view_boolean;
   
            // set chat channel members to online
		        chat_presence_channel.members.each(function(member){
      				if ($('#<%=ID_TAG_IDEA_USER%>' + String(member.id)).length ) {
					      member_online(member.id);
					    }else{
  		          if (render_user(member.id)){
  		            add_user_to_list(member.id);
  		          }
  		        }
		        });
		  
		        // set highlighting
            $('#user_filter_public').css('text-decoration', 'none');
            $('#user_filter_friends').css('text-decoration', 'none');
            $('#user_filter_public').unbind('click');
            $('#user_filter_friends').unbind('click');

            // if view type of user list window is public
            if (public_view){
              $('#user_filter_friends').css('text-decoration', 'underline');
			        $('#user_filter_friends').click(function(){
			          render_user_list(false);
			        });
			   			$('#user_filter_friends').mouseover(function () {
              	$(this).css('cursor', 'pointer');
              });
			   			$('#user_filter_public').mouseover(function () {
              	$(this).css('cursor', 'auto');
              });
            }else{
              $('#user_filter_public').css('text-decoration', 'underline');
			        $('#user_filter_public').click(function(){
          			render_user_list(true);
			        });
			   			$('#user_filter_friends').mouseover(function () {
              	$(this).css('cursor', 'auto');
              });
			   			$('#user_filter_public').mouseover(function () {
              	$(this).css('cursor', 'pointer');
              });
            }
          }//,
          //error: function(msg){ // remove this for live deploy
          //  alert(msg);
          //}
        });
		  }
			
			// bind public and friend user list filters to functions
			$('#user_filter_friends').mouseover(function () {
      	$(this).css('cursor', 'pointer');
      });
      $('#user_filter_friends').css('text-decoration', 'underline');
			$('#user_filter_friends').click(function(){
			  render_user_list(false);
			});
		});

    // Take in member id and see if user should be rendered based on public view / friend view and user's friend list
    function render_user(member_id){
      if (!public_view &&
          $.inArray(String(member_id), friend_ids_array) == -1){
        return false;
      }
      return true;
    }

    function add_user_to_list(member_id){
      $.ajax({
          url: "<%=idea_chat_user_path%>", 
          data: {user_id : member_id, user_status : "<%=ID_TAG_CHAT_USER_VIEWING_STRING%>", idea_id : <%=@idea.id%>}, 
          dataType: 'html',
          success: function(returned_html){
            $("#<%=ID_TAG_IDEA_CHAT_USER_LIST%>").prepend(returned_html);
          }//,
          //error: function(msg){ // remove this for live deploy
          //  alert(msg);
          //}
        });
    }

		function member_online(user_id) {
  		$('#<%=ID_TAG_IDEA_USER%>' + String(user_id)).removeClass('chat-board-user-item-status-offline');
      $('#<%=ID_TAG_IDEA_USER%>' + String(user_id)).addClass('chat-board-user-item-status-online');
		}

		function member_offline(user_id) {
      $('#<%=ID_TAG_IDEA_USER%>' + String(user_id)).removeClass('chat-board-user-item-status-online');
  		$('#<%=ID_TAG_IDEA_USER%>' + String(user_id)).addClass('chat-board-user-item-status-offline');
		}
 
		
		<% if @has_idea %>
		  //////////////////////////////////////////////////////////
		  // This section is for idea want, kick and commit actions
		  //   rendered depending on if user has joined idea
		  //////////////////////////////////////////////////////////
      var want_it_additional_clicks=false; // this counts batches of clicks; interval function picks this up, sends to DB, and clears counter
      var want_it_global_counter = <%= @curr_user_idea_link.want_it_count.to_i %>;

		  $(document).ready(function(){			
			  // bind want it div to click and turn into button
			  $('#JS_want_it_counter').mouseover(function () {
        	$(this).css('cursor', 'pointer');
        });
			  $('#JS_want_it_counter').click(function(){
          want_it_global_counter += 1;
          $(this).html(String(want_it_global_counter));
          want_it_additional_clicks = true;
			  });		
        setInterval(function() {
          send_want_it_counts();
        }, 1000); // TODO: optimize this 1 second delay for function gives ajax to return and make page longer before next at_bottom check 

        // bind commit div to click and turn into button
        $('#JS_commit').mouseover(function() {
          $(this).css('cursor', 'pointer');
        });
			  $('#JS_commit').click(commit_user_to_idea);

        // make mouse over the help icon for all help links
        $('.JS_help_link').mouseover(function () {
          $(this).css('cursor','help');
        });
		  });

      // send commit create to backend database and update page accordingly
      function commit_user_to_idea(){
        <% if @read_only %>
          $.facebox(<%= :new_session_path %>);
        <% else %>
          $.post("<%=idea_commitments_path%>", {idea_commitment: {user_id: <%=current_user.id%>, idea_id: <%=@idea.id%>}}, null, "script");
        <% end %>
      }

      // sends want it counts to backend database and updates counter in person table
      function send_want_it_counts(){
        if (want_it_additional_clicks){
          want_it_additional_clicks = false;

          $.ajax({url: "/user_ideas/"+<%=@curr_user_idea_link.id.to_s%>,
                  type: "PUT",
                  data: {id: "<%=@curr_user_idea_link.id.to_s%>", user_idea: {want_it_count: want_it_global_counter}},
                  success: function(return_html){
                    $('#<%=ID_TAG_USER_LIST_USER_ROW+current_user.id.to_s%>')
                      .find('.chat-board-user-item-want-count') // find any sub items with right class
                      .slice(0,1) // take first occurance
                      .html(String(want_it_global_counter)); // update
                  },
                  dataType: 'html'});
        }
      }
		  //////////////////////////////////////////////////////////
		  // End join dependent section
		  //////////////////////////////////////////////////////////
    <% end %>
    
  </script>
<% end %>

<div class="idea-info-container">
  <div class="idea-info">
    <div class='idea-info-pic'>
      <div>
        <%= image_tag @idea.photo.url(:medium)%>
      </div>
        <span id="<%=ID_TAG_IDEA_EDIT_LINK%>" class='minor-link'>
          <% unless @curr_user_idea_link.nil? %>
            &nbsp;&nbsp;<%= link_to 'Edit', edit_idea_path(@idea), {:method => 'get'}%>
          <% end %>
        </span>

      <% if @curr_user_idea_link.nil? %>
        <div style="height: 100%">
         <%= link_to BUTTON_JOIN_IDEA,
              join_idea_from_idea_view_path(:idea_id => @idea.id, :idea_assc_type => IDEA_ASSC_ADD_IDEA),
                               {:method => 'post'} %>

        </div>
      <% end %>
    </div>
    <div>
   </div>

    <div class="idea-info-data">
      <div class='idea-info-title'>
        <%= @idea.text %>
      </div>

      <div class="idea-info-user-container">
        <div class="content-header">
          Pioneers
        </div>
        <div class="idea-user-block">
          <% @idea_users.each do |user|  %> 
            <div class="idea-user">
              <div style="float:left; width:50px; height:50px;">
                <%= render :partial => '/users/profile_pic', :locals => {:current_user => user, :path => user_path(user.id), :makelink => !@read_only} %>
              </div>
              <div style="float: left; width:49px; margin-left: 1px;">
                <%= user.first_name %> <%= user.last_name %>
              </div>
            </div>
          <% end %>
        </div>
      </div>
       <div class='content-section'>
    <div class='content-header'>Idea Discussion</div>
    
    <% unless @read_only %>
    <span class='minor-text'>Post information you want to share with the group</span>

    
    <div><br/><%= link_to "Post New Topic", "#", :id => "new_topic_link" %></div>
    <div id="new_topic" <% unless @forum_posts.empty? %> class="hidden-div" <% end %> > 
      <%= render :partial => 'forum/forum_post', :locals => {:post_id => nil, :idea_id => @idea.id} %>
    </div><br/>
    <% end %>
    <div id='forum-container'>
      <%= render :partial => 'forum/forum_display', :locals => {:posts => @forum_posts, :level => 0, :postCount => 0} %>
    </div>

  </div>
 
      </div>
    </div>
  </div>
</div>

