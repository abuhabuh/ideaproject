<% content_for :head do %>

  <script src="/assets/external/jquery.masonry.min.js"></script>
  <script src="/assets/external/jquery.imagesloaded.js"></script>
  
  <script type="text/javascript">
    last_scroll_position = $(window).scrollTop();

    // TODO: can set autofocus with HTML5 as well so don't need this javascript to run for HTML5 browsers -->
    //$(document).ready(function(){

    function renderIdeaPreview(){
      var idea_id = $('.idea-id-identifier', this).html();

      $.ajax({url: "<%=idea_preview_path%>",
            data: {idea_id: idea_id},
            success: function(return_html){
              $('#AJAX_right_preview_box_id').html(return_html);
            },
            dataType: 'html'});

      var idea_pos = $(this).position();
      var top_pos_str = Math.round(idea_pos.top-182).toString()+"px"
      $('#AJAX_right_preview_box_id').css({"position":"relative","top":top_pos_str});
    }

    function joinIdea(){
      var idea_id = $('.idea-id-identifier', this).html();

      $.ajax({url: "<%=user_ideas_path%>",
              type: "POST",
              data: {user_id: <%=current_user.id%>, idea_id: idea_id},
              success: function(return_html){                
                $.ajax({url: "<%=idea_preview_path%>",
                        data: {idea_id: idea_id},
                        success: function(return_html){
                          $('#AJAX_right_preview_box_id').html(return_html);
                        },
                        dataType: 'html'});
              },
              dataType: 'html'});

      var idea_pos = $(this).position();
      var top_pos_str = Math.round(idea_pos.top-182).toString()+"px"
      $('#AJAX_right_preview_box_id').css({"position":"relative","top":top_pos_str});
      
      $(this).html("FUCK YEA");
    }

    $(function(){
      did_scroll_down = false; // initialize variable for scroll bottom interval function

      $("#idea").focus();
      $("#idea").select();

      $("#idea").focus(function(){
        $("#idea").select();
      });
      
      $("#search").focus(function(){
        $("#search").select();
      });

      var $container = $('#AJAX_main_stream_content');
      // turn off masonry for stream view - masonry class div does not sit in content-container
      //   so css styling is off
      <% unless current_user.auth_page_layout == PAGE_LAYOUT_AUTH_HOME_STREAM %>
        // set Masonry variable and initialize tiling
        $container.imagesLoaded(function(){
          $container.masonry({
            itemSelector: '.block-stream-element-container',
            isAnimated: false // sets animation
          });
        });
      <% end %>

      // Auto loading ideas on scroll bottom functions
      // Detect scroll event down
      $(window).scroll(function() {
        current_scroll_position = $(window).scrollTop();
        if (current_scroll_position > last_scroll_position){
          did_scroll_down = true;
        }else{
          did_scroll_down = false;
        }
        last_scroll_position = current_scroll_position;      
      });
      // Load next functions
      setInterval(function() {
        if ( did_scroll_down ) {
          did_scroll_down = false;
          
          if  ( ($(document).height() - $(window).height()) - $(window).scrollTop() < 700 ){
            var page_num = parseInt($("#AJAX_page_num_store").html()) + 1;
            var idea_string = $("#search").val();
            
            $.ajax({
                url: "<%=next_ideas_batch_js_path%>", 
                data: {page: page_num, idea: idea_string}, 
                dataType: 'html',
                success: function(returned_html){

                  var $newElems = $( returned_html );
                  // ensure that images load before adding to masonry layout
                  $newElems.imagesLoaded(function(){
                    // do not use masonry for stream view
                    <% unless current_user.auth_page_layout == PAGE_LAYOUT_AUTH_HOME_STREAM %>
                      $container.append($newElems).masonry( 'appended', $newElems, false); // boolean arg sets animation
                    <% else %>
                      $container.append($newElems);
                    <% end %>
                  });
                  
                  if ($.trim(returned_html).length != 0){
                    $("#AJAX_page_num_store").html(String(page_num)); // increment pages processed if results came back
                  }
                  
                  <% if current_user.auth_page_layout == PAGE_LAYOUT_AUTH_HOME_STREAM %> 
                    $('.JS_idea_row_action_preview').unbind('click'); // prevents double assignment of click
                    $('.JS_idea_row_action_preview').click(renderIdeaPreview);
                    $('.JS_idea_row_action_join').unbind('click');
                    $('.JS_idea_row_action_join').click(joinIdea);
                    $('.JS_idea_row_action_preview').mouseover(function () {
                	    $(this).css('cursor', 'pointer');
                    });
                    $('.JS_idea_row_action_join').mouseover(function () {
                	    $(this).css('cursor', 'pointer');
                    });        
                  <% end %>
                }//,
                //error: function(msg){ // TODO: remove this for live deploy
                //  alert(msg);
                //}
              });

          }
        }
      }, 1000); // 1 second delay for function gives ajax to return and make page longer before next at_bottom check 

    });


    <% if current_user.auth_page_layout == PAGE_LAYOUT_AUTH_HOME_STREAM %> 
      $(document).ready(function(){
        $('.JS_idea_row_action_preview').click(renderIdeaPreview);
        $('.JS_idea_row_action_preview').mouseover(function () {
    	    $(this).css('cursor', 'pointer');
        });
        
        $('.JS_idea_row_action_join').click(joinIdea);
        $('.JS_idea_row_action_join').mouseover(function () {
    	    $(this).css('cursor', 'pointer');
        });        
      });
    <% end %>

  </script>
<% end %>


<!-- id tag to mark this as the AUTH HOME page for shared AJAX functions -->
<div class='hidden-div' id='<%=ID_TAG_HOME_AUTH_PAGE%>'></div>
<div id='AJAX_page_num_store' class='hidden-div'><%=session[:page]%></div> <!-- AJAX paginate call to load more ideas -->


<% if current_user.auth_page_layout == PAGE_LAYOUT_AUTH_HOME_STREAM %> 
<!-- Using side bar menu so need to limit search and stream to right side -->
<div class='content-container'>  
<% end %>

  <!-- Main Body for side menu, stream, and suggestion block -->
  <div class='stream-search-bar-container'>

    <div class='stream-search-field-and-button'>
      <%= form_tag authenticated_home_path, :method => :get do %>
        <% if params[:search].blank? %>
          <%= text_field_tag :search, INPUT_BOX_SEARCH_IDEAS %>
        <% else %>
          <%= text_field_tag :search, params[:search] %>
        <% end %>        
        <%= submit_tag "Search", :name => nil %>
        
        <input type="hidden", name="stream_view" value='<%=STREAM_VIEW_SEARCH%>' />
      <% end %>
    </div>
    
  </div>

  <div id='AJAX_main_stream_content'>    
    <!-- Determine what kind of layout to render -->
    <% case current_user.auth_page_layout %>
    <% when PAGE_LAYOUT_AUTH_HOME_BLOCK %>
      <% @stream_ideas.each do |idea| %>
        <%= render :partial => "shared_modules/block_stream_element", :locals => {:idea => idea} %>
      <% end %>

    <% when PAGE_LAYOUT_AUTH_HOME_STREAM %>
      <% @stream_ideas.each do |idea| %>
        <%= render :partial=>'home/row_item_search_idea', 
                   :locals => {:idea_item => idea,
                               :pic_display_mode => PIC_VIEW_TYPE_USER,
                               :view_only => IDEA_STREAM_VIEW_ONLY_FALSE} %>
      <% end %>

    <% end %>
  </div>

<% if current_user.auth_page_layout == PAGE_LAYOUT_AUTH_HOME_STREAM %>
<!-- Using side bar menu so need to limit search and stream to right side -->
</div>
<div id='AJAX_right_preview_box_id' class='right-preview-box'>
  <% unless @idea.nil? %>
    <%= render :partial => 'ideas/idea_preview' %>
  <% else %>
    Sorry, no ideas are present for your friends.
  <% end %>

</div>

<% end %>
