<% content_for :head do %>

  <script type="text/javascript">
    last_scroll_position = $(window).scrollTop();

    // TODO: can set autofocus with HTML5 as well so don't need this javascript to run for HTML5 browsers -->
    $(document).ready(function(){

      did_scroll_down = false; // initialize variable for scroll bottom interval function

      $("#idea").focus();
      $("#idea").select();

      $("#idea").focus(function(){
        $("#idea").select();
      });
      
      $("#search").focus(function(){
        $("#search").select();
      });

      // Auto loading ideas on scroll bottom functions
      // Detect scroll event down
      $(window).scroll(function() {
        current_scroll_position = $(window).scrollTop();
        if (current_scroll_position > last_scroll_position){
          did_scroll_down = true;
        }else{
          did_scroll_down = false;
        }
        last_scroll_position = current_scroll_position;      
      });
      // Load next functions
      setInterval(function() {
        if ( did_scroll_down ) {
          did_scroll_down = false;
          
          if  ( ($(document).height() - $(window).height()) - $(window).scrollTop() < 500 ){
            var page_num = parseInt($("#AJAX_page_num_store").html()) + 1;
            var idea_string = $("#search").val();
            
            if (idea_string == $("#search_box_default_text").html()){
              idea_string = "";
            }

            $.ajax({
                url: "<%=next_ideas_batch_js_path%>", 
                data: {page: page_num, idea: idea_string}, 
                dataType: 'html',
                success: function(returned_html){
                  $("#AJAX_main_stream_content").append(returned_html)
                  if ($.trim(returned_html).length != 0){
                    $("#AJAX_page_num_store").html(String(page_num)); // increment pages processed if results came back
                  }
                }//,
                //error: function(msg){ // remove this for live deploy
                //  alert(msg);
                //}
              });

          }
        }
      }, 1000); // 1 second delay for function gives ajax to return and make page longer before next at_bottom check 

    });


  </script>
<% end %>


<!-- id tag to mark this as the AUTH HOME page for shared AJAX functions -->
<div class='hidden-div' id='<%=ID_TAG_HOME_AUTH_PAGE%>'></div>
<div class='hidden-div' id='search_box_default_text'><%=INPUT_BOX_SEARCH_IDEAS%></div> <!-- TODO: this is kinda hacky: JS above detects for this -->

<!-- Main Body for side menu, stream, and suggestion block -->


<div class='content-search-container'>

  <div class='content-search-field-and-button'>
    <%= form_tag authenticated_home_path, :method => :get do %>
      <% if params[:search].blank? %>
        <%= text_field_tag :search, INPUT_BOX_SEARCH_IDEAS %>
      <% else %>
        <%= text_field_tag :search, params[:search] %>
      <% end %>        
      <%= submit_tag "Search", :name => nil %>
      
      <input type="hidden", name="stream_view" value='<%=STREAM_VIEW_SEARCH%>' />
    <% end %>
  </div>
  
    <!-- AJAX picks up DIV ids to insert proper notices -->
  <div id='flash-notice-div'>
    <% if flash[:notice] %>
      <%= render :partial => "layouts/flash_notice" %>
    <% end %>
  </div>
  <div id='flash-alert-div'>
    <% if flash[:alert] %>
      <%= render :partial => "layouts/flash_alert" %>
    <% end %>
  </div>
  <!-- or flash.each do |key, msg| -->
</div>


<div id='AJAX_page_num_store' class='hidden-div'><%=session[:page]%></div> <!-- AJAX paginate call to load more ideas -->

<div id='AJAX_main_stream_content'>    

  <!-- STREAM FRIENDS result display -->
  <% if session[:stream_view] == STREAM_VIEW_FRIENDS %>

    <% @friends_ideas.each do |friend_idea| %>
      <% idea = Idea.find(friend_idea.idea_id) %>
      <%= render :partial => "shared_modules/magazine_stream_element_search", :locals => {:idea => idea} %>
    <% end %>

  <% else %>
  
  <!-- STREAM VIEW PUBLIC and SEARCH RESULTS display -->
  
    <% @search_result_ideas.each do |idea| %>
      <%= render :partial => "shared_modules/magazine_stream_element_search", :locals => {:idea => idea} %>
    <% end %>
    
  <% end %>
</div>


